///PROJECT TANK GAME///
//CONTROLS: Player1: MOVE= (W),(A),(S),(D) , ROTATE GUN= (Q),(E) , FIRE=(F)
//CONTROLS: Player2: MOVE= (up arrow),(left arrow),(right arrow), (down arrow), ROTATE GUN= (,),(.), FIRE= (/)
//GAME DETAILS:
//Players will face off against each other as tanks in a randomly generated map. 
//The objective is to survive or kill the other player. Players can kill enemy 
//ai to get perks that will upgrade their stats, which makes fighting the other 
//player easier. Watch out however, every bullet, can deal damage to the players, 
//even if they shot it initially.
//Have fun!


//these codes need to be before the setup() or else maps will be counted as nullpointers

//random map choose
int randomMap = floor(random(0, 5));

//to initialize what address of int [][] map to use
public int [][] mapChosen = new int[21][21];

//nyan map array value 0
public int [][] nyanMapColorValue={
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 0},
  {0, 0, 0, 1, 2, 2, 3, 5, 3, 3, 1, 4, 4, 1, 3, 3, 3, 3, 2, 2, 0},
  {0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 1, 4, 4, 4, 1, 3, 5, 3, 3, 1, 0},
  {0, 0, 0, 1, 2, 3, 3, 3, 5, 3, 1, 4, 4, 4, 4, 1, 1, 1, 1, 4, 0},
  {0, 1, 0, 1, 2, 3, 3, 3, 3, 3, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0},
  {0, 4, 1, 1, 2, 3, 3, 3, 3, 1, 4, 4, 10, 1, 4, 4, 4, 4, 4, 10, 0},
  { 0, 4, 4, 1, 2, 3, 5, 3, 5, 1, 4, 4, 1, 1, 4, 4, 4, 1, 4, 1, 0},
  { 0, 1, 4, 1, 2, 3, 3, 3, 3, 1, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 0},
  { 0, 0, 1, 1, 2, 2, 3, 5, 3, 1, 3, 3, 4, 1, 4, 4, 1, 4, 4, 1, 0},
  { 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 0},
  { 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 4, 4, 4, 4, 4, 4, 4, 4, 0},
  { 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
  { 0, 1, 4, 4, 1, 0, 1, 4, 4, 1, 0, 0, 1, 4, 4, 1, 0, 1, 4, 4, 0},
  { 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};
//abyss map value 1
int[][] abyssMapColorValue=
  {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 0, 0},
  {0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0},
  {0, 0, 3, 0, 0, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 0, 0, 3, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 5, 5, 1, 1, 1, 1, 1, 5, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
  {0, 0, 1, 0, 0, 0, 0, 5, 5, 1, 1, 1, 5, 5, 0, 0, 0, 0, 1, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 0, 5, 5, 1, 5, 5, 0, 0, 1, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0},
  {0, 5, 0, 1, 0, 0, 0, 0, 0, 1, 5, 1, 0, 0, 0, 0, 0, 5, 0, 1, 0},
  {0, 5, 0, 1, 0, 1, 0, 0, 0, 5, 5, 5, 0, 0, 0, 5, 0, 5, 0, 1, 0},
  {0, 5, 0, 1, 0, 1, 0, 0, 0, 1, 5, 1, 0, 0, 0, 5, 0, 5, 0, 1, 0},
  {0, 5, 0, 1, 0, 0, 0, 0, 0, 1, 5, 1, 0, 0, 0, 0, 0, 5, 0, 1, 0},
  {0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};
//beach map value 2
int [][]beachMapColorValue=
  {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 6, 0, 0, 0, 0},
  {0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 6, 0, 0},
  {0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 2, 3, 2, 0, 0, 0, 6, 0, 6, 0, 0},
  {0, 7, 3, 4, 3, 7, 0, 0, 5, 0, 2, 3, 2, 0, 0, 6, 0, 0, 6, 0, 0},
  {0, 0, 0, 4, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 6, 0, 0},
  {0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0},
  {0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0},
  {0, 0, 0, 4, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 6, 0, 6, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 6, 0, 0, 6, 0, 6, 0},
  {0, 0, 0, 0, 0, 0, 0, 7, 3, 4, 3, 7, 0, 0, 6, 0, 0, 0, 0, 6, 0},
  {0, 0, 0, 0, 0, 0, 7, 0, 0, 4, 0, 0, 7, 0, 6, 6, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0},
  {0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 6, 0, 0, 6, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 6, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 6, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};
//labyrinth map Value 3
int[][] labyMapColorValue=
  {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0},
  {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0},
  {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0},
  {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0},
  {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0},
  {0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0},
  {0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0},
  {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6}};
//loss color value 4
int[][] lossMapColorValue=
  {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 3, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 3, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 3, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 3, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 6, 6, 6, 4, 6, 6, 6, 1, 1, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 3, 3, 3, 3, 0},
  {0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

//inventory box arrays
int invSlots=10;
playerInventory[] player1Inv= new playerInventory[invSlots]; //perk slots
playerInventory[] player2Inv= new playerInventory[invSlots]; //perk slots
color slotBlue= color(131, 210, 252);//color of invslot
color hp1boxc= color(245, 61, 116);//player 1 hp slot color
color hp2boxc= color (47, 136, 245); // player 2 hp slot color
color xpboxc= color(67, 250, 180); //xp slot color

//player health and xp box arrays
int hpxpBox=5;//the max length of hp or xp boxes should be 5 squares with a width of GRID_SIZE
playerInventory player1HP;//declaring class instances
playerInventory player2HP;
playerInventory player1XP;
playerInventory player2XP;

//players
Tank player1 = new Tank(60, 60, 0, 0, color(255, 0, 0),false);
Tank player2 = new Tank(780, 780, 0, 0, color(68, 188, 252),false);

//array list for enemies
public ArrayList<Tank> enemies = new ArrayList<Tank>();
//arraylist for bullets
public ArrayList<Shot> shots = new ArrayList<Shot>();
//player controls
boolean keyW, keyA, keyS, keyD, keyQ, keyE, keyUp, keyLeft, keyDown, keyRight, keyComma, keyPeriod;
boolean p1Fire, p2Fire=false;
float mouseTheta;

//map function
public Terrain[][] layout = level1();

//amount of enemies defeated
int enemyKilled=0;
//amount of enemies left
int enemiesLeft=0;
//images
PImage beach, nyan, loss, abyss, laby, wall;
PImage killCount;
PImage bulldoze, shotCount, bounces, reloadSpeed, shotDamage, shotSpeed, critChance,explosiveBullet, healthBoost, moveSpeed, explosion;
//font
PFont stencil;
//perks and other image arrays
ArrayList<PImage> perks = new ArrayList<>(); // images for perks
ArrayList<PImage> otherAssets = new ArrayList<>(); //for images of explosions and rockets, etc
